!function(){"use strict";angular.module("ml.visjsGraph",["ngVis","ui.bootstrap"])}(),function(){"use strict";function VisjsGraphService(){var api="/v1/resources";this.setApi=function(url){api=url},this.$get=function($http){function search(ids){return $http.get(api+"/visjs?rs:subject="+encodeURIComponent(ids[0])).then(function(response){return response.data})}function expand(ids){return $http.get(api+"/visjs?rs:expand=true&rs:subject="+encodeURIComponent(ids[0])).then(function(response){return response.data})}var service={search:search,expand:expand};return service}}angular.module("ml.visjsGraph").provider("visjsGraphService",VisjsGraphService)}(),function(){"use strict";function VisjsGraphDirective(visjsGraphService){return{restrict:"E",scope:{uris:"=",graphSearch:"=?",graphExpand:"=?",physics:"=?",layout:"=?",customGraphOptions:"=?graphOptions",customGraphEvents:"=?graphEvents",network:"=?",items:"=?"},templateUrl:"/visjs-graph/visjs-graph.html",controller:"visjsGraphCtrl",controllerAs:"ctrl",link:function($scope,element,attrs){attrs.graphSearch||($scope.graphSearch=visjsGraphService.search),attrs.graphExpand||($scope.graphExpand=visjsGraphService.expand),attrs.physics?"false"===attrs.physics?($scope.physicsEnabled=!1,$scope.physics="forceAtlas2Based"):($scope.physicsEnabled=!0,$scope.userDefinedPhysics=!0):($scope.physicsEnabled=!0,$scope.physics="forceAtlas2Based"),attrs.layout||($scope.layout="standard")}}}angular.module("ml.visjsGraph").directive("mlVisjsGraph",VisjsGraphDirective),VisjsGraphDirective.$inject=["visjsGraphService"]}(),function(){"use strict";function visjsGraphCtrl($scope,$location,VisDataSet){function init(){nodes.clear(),$scope.items.nodes[0]&&$scope.items.nodes[0].label?ctrl.label=$scope.items.nodes[0].label:ctrl.label="this node",ctrl.refreshGraph(),ctrl.physicsUpdated(),ctrl.layoutUpdated()}var ctrl=this,nodes=new VisDataSet([]),edges=new VisDataSet([]);ctrl.graphData={nodes:nodes,edges:edges},ctrl.graphOptions={layout:{hierarchical:!1,randomSeed:2},interaction:{navigationButtons:!0},height:"500px",groups:{"http://xmlns.com/foaf/0.1/Person":{image:"bower_components/ml-visjs-graph-ng/dist/images/person.png"}},nodes:{size:30,borderWidth:2,shadow:!0,borderWidthSelected:6,shape:"circularImage",image:"bower_components/ml-visjs-graph-ng/dist/images/generic.png",color:{background:"white"},font:{size:12}},physics:{enabled:!1,barnesHut:{gravitationalConstant:-8e3,centralGravity:.1,springLength:200,springConstant:.04,damping:.5,avoidOverlap:0},forceAtlas2Based:{gravitationalConstant:-200,centralGravity:.01,springLength:100,springConstant:.08,damping:.4,avoidOverlap:0},repulsion:{centralGravity:.1,springLength:200,springConstant:.05,nodeDistance:200,damping:.09},hierarchicalRepulsion:{centralGravity:0,springLength:100,springConstant:.01,nodeDistance:120,damping:.09},maxVelocity:150,minVelocity:6,stabilization:{enabled:!0,iterations:1e3,updateInterval:100,onlyDynamicEdges:!1,fit:!0},timestep:.5,adaptiveTimestep:!0},edges:{width:2,shadow:!0,arrows:{to:{enabled:!0,scaleFactor:.75}},font:{size:10,align:"top"},smooth:{type:"curvedCW",roundness:.1}}},ctrl.graphEvents={onload:function(network){$scope.network=network},stabilized:function(){$scope.network.fit()},oncontext:function(params){var coordinates=params.pointer.DOM,targetNode=$scope.network.getNodeAt(coordinates);return targetNode&&($location.path("/detail"+targetNode),$scope.$apply()),params.event.preventDefault()},doubleClick:function(params){var nodeUri=params.nodes[0];$scope.graphExpand([nodeUri]).then(ctrl.updateGraph)},afterDrawing:function(ctx){if($scope.network){var nodePositions=$scope.network.getPositions();nodes.forEach(function(node){if(1===$scope.network.findNode(node.id).length){var nodePosition=nodePositions[node.id];if(node.linkCount&&(node.edgeCount=node.linkCount),node.edgeCount&&node.edgeCount>0){var radius;radius=node.edgeCount>=100&&node.edgeCount<1e3?15:node.edgeCount>=1e3?20:10,ctx.strokeStyle="white",ctx.fillStyle="#848484",ctx.lineWidth=1,ctx.circle(nodePosition.x-20,nodePosition.y-20,radius),ctx.fill(),ctx.stroke(),ctx.font="8pt Lucida",ctx.strokeText(node.edgeCount,nodePosition.x-20,nodePosition.y-24)}}})}}},ctrl.physicsUpdated=function(){$scope.network&&($scope.network.setOptions({physics:{enabled:$scope.physicsEnabled,solver:$scope.physics}}),$scope.network.stabilize())},ctrl.layoutUpdated=function(){var options={edges:{smooth:{type:"curvedCW",roundness:.1}}};"standard"===$scope.layout?("hierarchicalRepulsion"===$scope.physics&&($scope.physics="forceAtlas2Based"),options.layout={hierarchical:!1}):"hierarchyTop"===$scope.layout?($scope.physics="hierarchicalRepulsion",options.layout={hierarchical:{direction:"UD",sortMethod:"directed"}}):"hierarchyBottom"===$scope.layout?($scope.physics="hierarchicalRepulsion",options.layout={hierarchical:{direction:"DU",sortMethod:"directed"}}):"hierarchyLeft"===$scope.layout?($scope.physics="hierarchicalRepulsion",options.layout={hierarchical:{direction:"LR",sortMethod:"directed"}}):"hierarchyRight"===$scope.layout&&($scope.physics="hierarchicalRepulsion",options.layout={hierarchical:{direction:"RL",sortMethod:"directed"}});var physicsOptions={physics:{enabled:$scope.physicsEnabled,solver:$scope.physics}};$scope.network&&($scope.network.setOptions(options),$scope.network.stabilize()),$scope.network&&$scope.network.setOptions(physicsOptions)},$scope.$watch("graphSearch",function(){$scope.graphSearch($scope.uris).then(function(items){$scope.items=items,init()})}),$scope.$watch("uris",function(){$scope.graphSearch($scope.uris).then(function(items){$scope.items=items,init()})}),$scope.$watch("customGraphOptions",function(newValue){angular.merge(ctrl.graphOptions,newValue),$scope.network&&$scope.network.setOptions(newValue)}),$scope.$watch("customGraphEvents",function(newValue){angular.extend(ctrl.graphEvents,newValue)}),$scope.$watch("physicsEnabled",function(){ctrl.physicsUpdated()}),$scope.$watch("physics",function(){ctrl.physicsUpdated()}),$scope.$watch("layout",function(){ctrl.layoutUpdated()}),ctrl.getNode=function(nodeId){return nodes.get(nodeId)},ctrl.updateGraph=function(data){$scope.items=data,ctrl.refreshGraph()},ctrl.refreshGraph=function(){$scope.items&&(nodes.update($scope.items.nodes),$scope.items.edges?edges.update($scope.items.edges):$scope.items.links&&edges.update($scope.items.links))}}angular.module("ml.visjsGraph").controller("visjsGraphCtrl",visjsGraphCtrl),visjsGraphCtrl.$inject=["$scope","$location","VisDataSet"]}();